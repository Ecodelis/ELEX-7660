// File: vendingMachine_tb.sv
// Description: 
// Author: Marcus Fu
// Date: 2024-02-11


module vendingMachine_tb;

    `timescale 1ms/1ms // Time unit: 1ms, Precision: 1ms


    // Testbench signals
    logic nickel, dime, quarter;
    logic valid;
    logic clk = 0;
    logic reset_n;
    logic [6:0] coin;

    // Clock generation
    always #1 clk = ~clk; 

    vendingMachine dut (.*);

    // Assert a signal for one clock cycle
    task automatic single_coin(ref logic signal);
        begin
            signal = 1;
            @(posedge clk);
            signal = 0;
            @(posedge clk);
        end
    endtask

    task automatic multi_coin(ref logic signal1, signal2);
        begin
            signal1 = 1;
            signal2 = 1;
            @(posedge clk);
            signal1 = 0;
            signal2 = 0;
            @(posedge clk);
        end
    endtask


    initial begin
        reset_n = 0;
        @(posedge clk);
        reset_n = 1;

        // Test nickel
        single_coin(nickel);

        // Test dime
        single_coin(dime);

        // Test quarter
        single_coin(quarter);

        // Coin total should be 25 (0x19)


        // Test nickel and dime
        multi_coin(nickel, dime);

        // Test quarter and dime
        multi_coin(quarter, dime);

        // Coin total should be 75 (0x4B)
        

        // Test quarter
        single_coin(quarter);


        repeat(3) @(posedge clk); // Delay 3 clock cycles to allow valid to be asserted

        // See if a quarter can be detected after $1.00
        single_coin(quarter);

        $stop; // Stop simulation

    end




endmodule